C51 COMPILER V9.01   24C02                                                                 08/30/2013 11:23:03 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE 24C02
OBJECT MODULE PLACED IN 24C02.OBJ
COMPILER INVOKED BY: D:\keil\C51\BIN\C51.EXE 24C02.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "24c02.h"
   2          
   3          #define uchar unsigned char
   4          #define uint unsigned int
   5          
   6          sbit at24c02_SCL = P1^2;
   7          sbit at24c02_SDA = P1^3;
   8          
   9          void delay() { //空方法，空循环，对于11.0592MHz的晶振大概延时5us
  10   1              ;;//两个;表示两个nop
  11   1      }
  12          
  13          void getResponseMessage() {
  14   1              //第9个时钟时，等待at24c02_SDA变为0.表示at24c02给了pc一个应答。
  15   1              //如果时间超过一定时间。也默认at24c02也受到了数据。我们可以继续发数据
  16   1              uchar i;
  17   1              at24c02_SCL = 1;//在高电平期间读取信号
  18   1              delay();
  19   1              while((at24c02_SDA == 1) && (i < 250)) {          //等待应答
  20   2                      i ++;
  21   2              }
  22   1              at24c02_SCL = 0;//时钟拉低，表示第9个结束
  23   1              delay();
  24   1      }
  25          
  26          void sendStartMessage () {
  27   1              at24c02_SDA = 1;
  28   1              delay();
  29   1              at24c02_SCL = 1;
  30   1              delay();
  31   1              at24c02_SDA = 0;
  32   1              delay();
  33   1      }
  34          
  35          void sendStopMessage () {
  36   1              at24c02_SDA = 0;
  37   1              delay();
  38   1              at24c02_SCL = 1;
  39   1              delay();
  40   1              at24c02_SDA = 1;
  41   1              delay();
  42   1      }
  43          
  44          void writeByte(uchar d) {
  45   1              uchar i,t;
  46   1              t = d;
  47   1              for(i = 0; i < 8; i++) {
  48   2                      t = t<<1;
  49   2                      at24c02_SCL = 0;//为后面的跳变做准备
  50   2                      at24c02_SDA = CY;//先给数据，因为在跳变的瞬间at24c02读走数据
  51   2                      delay();//延时确保数据到位
  52   2                      at24c02_SCL = 1;//跳变，通知at24c02读走数据
  53   2                      delay();//延时确保数据被读走
  54   2              }
  55   1              at24c02_SCL = 0;
C51 COMPILER V9.01   24C02                                                                 08/30/2013 11:23:03 PAGE 2   

  56   1              delay();
  57   1      }
  58          
  59          
  60          uchar readByte() {
  61   1              uchar i,d,t;
  62   1              at24c02_SCL = 0;//准备时钟,方便后面拉高给高电平
  63   1              //开始读数据
  64   1              for(i = 0; i < 8;i++) {
  65   2                      delay();
  66   2                      at24c02_SCL = 1;//拉高后表示可以读数据
  67   2                      delay();//确保at24c02接受到信号
  68   2                      d=d<<1;
  69   2                      t = at24c02_SDA;
  70   2                      at24c02_SCL = 0;//数据读取完成
  71   2                      d = d|t;//0|0=0,0|1=1,1|0=1,1|1=1   这样，我们就可以把要返回的t和接受到的数据连接起来了
  72   2              }
  73   1              return d;
  74   1      }
  75          
  76          
  77          void writeData(uchar address,uchar d) {
  78   1              sendStartMessage();
  79   1              writeByte(0xa0);//写I2C设备的地址，即我们板子上面的芯片AT24C02
  80   1              
  81   1              getResponseMessage();//等待应答
  82   1              writeByte(address);//写磁盘的地址，即在AT24C02存储数据的地址，
  83   1              //我们的芯片是2k的，只要地址空间不超过这个值就可以了
  84   1      
  85   1              getResponseMessage();
  86   1              writeByte(d);//这里我们才能写我们的数据，
  87   1      
  88   1              getResponseMessage();
  89   1              sendStopMessage();
  90   1              delay();//方便别的函数能直接执行
  91   1      }
  92          
  93          uchar readData(uchar address) {
  94   1              uchar d;
  95   1              sendStartMessage();
  96   1              writeByte(0xa0);//寻址
  97   1              
  98   1              getResponseMessage();
  99   1              writeByte(address);
 100   1      
 101   1              getResponseMessage();
 102   1              sendStartMessage();
 103   1              writeByte(0xa1);//寻址
 104   1      
 105   1              getResponseMessage();
 106   1              d = readByte();
 107   1      
 108   1              delay();
 109   1              sendStopMessage();
 110   1              delay();//方便别的函数能直接执行
 111   1              return d;
 112   1      }
 113          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    169    ----
C51 COMPILER V9.01   24C02                                                                 08/30/2013 11:23:03 PAGE 3   

   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
